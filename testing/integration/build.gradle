plugins
{
    id 'opendcs.java-conventions'
    id 'java-library'
}


dependencies
{
    implementation(project(":opendcs"))
    implementation(project(":install"))
    testImplementation(platform(libs.junit.bom))
    testImplementation(libs.bundles.junit.platform)
    testImplementation(libs.bundles.junit)
    testImplementation(libs.bundles.jdbi)
    testImplementation(libs.org.flywaydb.flyway.core)
    testImplementation(libs.testcontainers.core)
    testImplementation(libs.testcontainers.postgresql)
    testImplementation(libs.hec.testcontainers.cwms)
    testImplementation(libs.commons.io)
    testImplementation(libs.webcompere.system.stubs.jupiter)
}


test
{
    dependsOn ":install:stage"
    useJUnitPlatform()
    def stageDir = project(":install").stage.outDir
    def classPath = project(":opendcs").configurations.runtimeClasspath.asPath

    systemProperties += project.properties.findAll {k, v -> k.startsWith("opendcs")}
    def impl = project.properties.get("opendcs.test.engine")
    jvmArgs += "-Dbuild.dir=$buildDir"
    jvmArgs += "-Dopendcs.test.classpath=${classPath}"
    jvmArgs += "-Djava.io.tmpDir=$buildDir/${impl}/tmp"
    jvmArgs += "-Dresource.dir=${projectDir}/src/test/resources" // TODO: make clearer
    jvmArgs += "-DDCSTOOL_HOME=${stageDir}" // TODO: make stage dir?
    doLast
    {
        println("*******DCSTOOL_HOME=${stageDir}")
    }
}