<project name="macros" xmlns:ivy="antlib:org.apache.ivy.ant"
    xmlns:if="ant:if" xmlns:unless="ant:unless"
    xmlns:jacoco="antlib:org.jacoco.ant">

<macrodef name="compile">
    <attribute name="outputDir"/>    
    <attribute name="srcDir"/>
    <attribute name="outputName"/>
    <attribute name="javaSrcTarget" default="1.8"/>
    <attribute name="javaCompileTarget" default="1.8"/>
    <element name="classpaths"/>

    <sequential>
        <uptodate property="@{outputName}.current" targetfile="${status.dir}/src.@{outputName}.build.date">
            <srcfiles dir="@{srcDir}" includes="**/*"/>
        </uptodate>
    <!-- create build date -->
        <mkdir dir="@{outputDir}/classes"/>
        <mkdir dir="@{outputDir}/resources"/>
        <tstamp>
            <format property="buildDate" pattern="MMM dd, yyyy"/>
        </tstamp>
        <if>
            <not>
                <isset property="@{outputName.current}"/>
            </not>
            <then>
                <sync todir="@{outputDir}/resources">
                    <fileset dir="@{srcDir}/resources"/>
                </sync>

                <javac debug="true" destdir="@{outputDir}/classes"
                    target="@{javaCompileTarget}" source="@{javaSrcTarget}"
                    includeantruntime="true"
                    encoding="UTF-8" includes="**">
                    <src path="@{srcDir}/java"/>
                    <compilerarg value="-parameters"/>
                    <classpath>
                        <classpaths/>
                    </classpath>
                </javac>
            </then>
        </if>
        <property name="@{outputName}.classes" value="@{outputDir}/classes"/>
        <property name="@{outputName}.resources" value="@{outputDir}/resources"/>
    </sequential>
</macrodef>
<macrodef name="test">
    <attribute name="classesDir"/>
    <attribute name="outputName"/>
    <element name="classpaths"/>
    <element name="testfiles" optional="true"/>
    <element name="jvmargs" optional="true"/>
    <sequential>
        <mkdir dir="${junit.html.output.dir}"/>    
        <mkdir dir="${build.dir}/test/@{outputName}/results"/>
        <mkdir dir="${build.dir}/test/@{outputName}/tmp"/>
        <jacoco:agent property="coverage.agent.param.test" destfile="${coverage.dir}/jacoco.@{outputName}.exec"/>
        <junitlauncher haltOnFailure="false" printSummary="true" failureProperty="@{outputName}.failed">
            <classpaths/>
            <testclasses outputdir="${build.dir}/test/@{outputName}/results">
                <fork>
                    <jvmarg value="${coverage.agent.param.test}"/>
                    <jvmarg value="-Dbuild.dir=${build.dir}"/>
                    <jvmarg value="-Djava.io.tmpdir=${build.dir}/test/@{outputName}/tmp"/>
                    <jvmarg if:set="debugPort" value="-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=${debugPort}"/>
                    <jvmargs/>
                </fork>
                <fileset dir="@{classesDir}">
                    <testfiles/>
                </fileset>
                <listener type="legacy-brief" sendSysOut="true" useLegacyReportingName="false"/>
                <listener type="legacy-xml" sendSysErr="true" sendSysOut="true" useLegacyReportingName="false"/>
            </testclasses>
        </junitlauncher>
        <mkdir dir="${junit.html.output.dir}/@{outputName}"/>
        <junitreport todir="${junit.html.output.dir}/">
            <fileset dir="${build.dir}/test/@{outputName}/results">
                <include name="TEST-*.xml"/>
                <exclude name="TEST-fixture*"/>
                <exclude name="TEST-*$?.xml"/>
            </fileset>
            <report format="noframes" todir="${junit.html.output.dir}/@{outputName}"/>
        </junitreport>
        <if>
            <isset property="@{outputName}.failed"/>
            <then>
                <delete file="${status.dir}/@{outputName}.run" quiet="true"/>
                <fail message="Tests have failures."/>
            </then>
            <else>
                <touch file="${status.dir}/@{outputName}.run"/>
            </else>
        </if>
    </sequential>
</macrodef>
</project>