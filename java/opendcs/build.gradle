plugins
{
    id 'opendcs.deps-conventions'
    id 'opendcs.java-conventions'
    id 'java-library'
}

configurations {
    all {
        exclude group: "com.oracle.database.jdbc", module: "jmscommon"
        exclude group: "stax"
        exclude group: "javax.media"
        exclude group: "com.sun.media"
        exclude group: "log4j"
        exclude group: "org.apache.xmlbeans", module: "xmlbeans"
        exclude group: "dom4j", module: "dom4j"
    }
}

dependencies {
    annotationProcessor(project(":opendcs-annotations"))
    api(project(":opendcs-annotations"))
    implementation(libs.bundles.oracle)
    implementation(libs.postgresql)
    implementation(libs.asm)
    implementation(libs.cglib)
    implementation(libs.commons.logging)
    implementation(libs.commons.net)
    implementation(libs.dom4j)
    implementation(libs.ganymed.ssh)
    implementation(libs.apache.poi)
    implementation(libs.jcalendar)
    implementation(libs.jfree.jcommon)
    implementation(libs.jfree.jfreechart)
    implementation(libs.jython.standalone)
    
    implementation(libs.scijava.jep) {
        exclude group: "jama", module: "jama"
    }
    implementation(libs.jama)
    implementation(libs.dropwizard.metrics.core)
    implementation(libs.passay)
    implementation(libs.sun.mailapi)
    implementation(libs.org.jcraft.jsch)
    implementation(libs.org.aspectj.aspectjrt)
    implementation(libs.org.json.json)

    implementation(libs.cwms.db.jooq) {
           exclude group: "org.jooq.pro", module: "jooq-meta"
           exclude group: "org.jooq.pro", module: "jooq-codegen"
           exclude group: "com.oracle.database.jdbc"
           exclude group: "mil.army.usace.hec", module: "hec-monolith"
    }
    implementation(libs.cwms.db.codegen)
    implementation(libs.cwms.db.aspects)
    implementation(libs.cwms.db.dao) {
        exclude group: "com.oracle.database.jdbc"
        exclude group: "com.oracle.database.jdbc", module: "jmscommon"
        exclude group: "mil.army.usace.hec", module: "hec-monolith"
    }
    implementation(libs.hec.db.jdbc) {
        exclude group: "com.oracle.database.jdbc"
        exclude group: "com.oracle.database.jdbc", module: "jmscommon"
        exclude group: "mil.army.usace.hec", module: "hec-monolith"
    }

    implementation(libs.hec.monolith) {
        exclude group: "codebase"
        exclude group: "org.jdom"
        exclude group: "org.bouncycastle"
        exclude group: "org.eclipse.jetty.aggregate"
        exclude group: "javax.servlet"
        exclude group: "mil.army.usace.hec.swingx"
        exclude group: "com.fifesoft"
        exclude group: "org.python"
        exclude group: "com.vividsolutions"
        exclude group: "mil.army.usace.hec", module: "context-specific-help"
        exclude group: "mil.army.usace.hec", module: "hec-geojson"
        exclude group: "javax.mail"
        exclude group: "org.apache.poi"
        exclude group: "net.java.dev.jna"
        exclude group: "org.apache-commons", module: "common-vfs2"
        exclude group: "org.jfree"
        exclude group: "com.mrsid"
        exclude group: "javax.help"
        exclude group: "org.jooq.pro"
    }

    implementation(libs.hec.cwms.ratings.core) {
        exclude group: "com.oracle.database.jdbc"
        exclude group: "mil.army.usace.hec", module: "hec-monolith"
    }
    implementation(libs.hec.nucleus.metadata)
    implementation(libs.org.slf4j.api)
    implementation(libs.bundles.jersey)
    implementation(libs.bundles.jdbi)
    implementation(libs.org.flywaydb.flyway.core)
    testImplementation enforcedPlatform(libs.junit.bom)
    testImplementation(libs.bundles.junit)
    testImplementation(libs.commons.io)
    testImplementation(libs.apache.derby)
    testImplementation(libs.webcompere.system.stubs.jupiter)
    testImplementation(libs.fasterxml.jackson.databind)
}

test
{
    jvmArgs += "-Dbuild.dir=$buildDir"
    jvmArgumentProviders.add(
        new CommandLineArgumentProvider()
        {
            Iterable<String> asArguments()
            {
                return ["-Dopendcs.jarfile=${jar.archiveFile.get().asFile}"];
            }
        })
    systemProperty "build.dir", "$buildDir"
}

test.dependsOn jar

javadoc {
    options.addBooleanOption('Xdoclint:none', true)
    source("8")
}