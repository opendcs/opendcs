name: OpenDCS Build and unit tests
on:
  pull_request:
    branches:
      - "main"
    types: [opened, synchronize, reopened]
  push:
    branches:
      - "main"

jobs:
  tests:
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest, macos-13, windows-latest]
        jdk: [8, 11, 17]
    runs-on: ${{matrix.platform}}
    steps:
      - uses: actions/checkout@v4.1.1
      - name: Set up JDK
        uses: actions/setup-java@v4.4.0
        with:
          java-version: ${{matrix.jdk}}
          distribution: temurin
      - uses: actions/setup-python@v5.1.0
        with:
          python-version: "3.8"
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4.1.0
        with:
          dependency-graph: generate-and-submit
      - name: Change temp dir in windows
        if: matrix.platform == 'windows-latest'
        run: |
          echo "TEMP=$env:USERPROFILE\AppData\Local\Temp" >> $env:GITHUB_ENV
          echo "TMP=$env:USERPROFILE\AppData\Local\Temp" >> $env:GITHUB_ENV
      - name: Unit and LRGS tests
        run: |
          ./gradlew test --info
      - name: integration tests (XML)
        # There is an odd issues with the log file name on the windows runner.
        # It does work locally though. Will work on it later.
        # Integration tests require docker now for test containers.
        # More work required to deal with the other platforms. Should be workable
        # at some point though.
        if: matrix.platform == 'ubuntu-latest'
        run: |
          ./gradlew :testing:opendcs-test:test -D"opendcs.test.engine=OpenDCS-XML" --info
      - name: integration tests (OpenDCS-Postgres)
        # There is an odd issues with the log file name on the windows runner.
        # It does work locally though. Will work on it later.
        # Integration tests require docker now for test containers.
        # More work required to deal with the other platforms. Should be workable
        # at some point though.
        if: matrix.platform == 'ubuntu-latest'
        run: |
          ./gradlew :testing:opendcs-test:test -D"opendcs.test.engine=OpenDCS-Postgres" --info
      - name: integration tests (CWMS-Oracle)
        # There is an odd issues with the log file name on the windows runner.
        # It does work locally though. Will work on it later.
        # Integration tests require docker now for test containers.
        # More work required to deal with the other platforms. Should be workable
        # at some point though.
        if: matrix.platform == 'ubuntu-latest'
        run: |
          ./gradlew :testing:opendcs-test:test -D"opendcs.test.engine=CWMS-Oracle" --info
      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        if: matrix.platform == 'ubuntu-latest' && matrix.jdk == 17
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Gradle packages
        uses: actions/cache@v4
        if: matrix.platform == 'ubuntu-latest' && matrix.jdk == 17
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Build and analyze
        if: matrix.platform == 'ubuntu-latest' && matrix.jdk == 17
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew build sonar --info -Dorg.gradle.jvmargs=-Xmx4096M
