plugins {
    id 'java'
    id 'com.bmuschko.izpack' version "3.0"
    id 'jacoco' // code coverage
    id 'maven-publish'
    id "io.gitlab.jkushmaul.url2maven" version "0.9.2"
}
def RCNUM="02"
def VERSION="6-7-RC${RCNUM}"
def DATE = new Date().format('yyyyMMddHHmmss')

version = VERSION
group = 'covesoftware'


build.finalizedBy(publishToMavenLocal)
publishing {
        publications {
            maven(MavenPublication) {
                from(components.java)
            }
        }
}

/* dependencies for the application */
repositories {
    mavenLocal()
    mavenCentral()
    jcenter()

}

task downloadDeps {
    project.mkdir("${buildDir}/downloaded")
    def f = new File("${buildDir}/downloaded/Cobra.jar")
    if(!f.exists()){
        new URL("https://github.com/lobobrowser/Cobra/releases/download/1.0.2/Cobra.jar").withInputStream{ i -> f.withOutputStream{ it << i }}
    }
}

compileJava.dependsOn downloadDeps

dependencies {
    implementation 'com.oracle.ojdbc:ojdbc8:19.3.0.0'
    implementation 'org.postgresql:postgresql:42.2.23'
    implementation 'asm:asm:3.3'
    implementation 'cglib:cglib:2.1_3'
    implementation 'commons-logging:commons-logging:1.0.4'
    implementation 'commons-net:commons-net:3.3'
    implementation 'dom4j:dom4j:1.6.1'
    implementation 'ch.ethz.ganymed:ganymed-ssh2:build210'
    implementation 'org.apache.poi:poi:5.0.0'
    implementation 'com.toedter:jcalendar:1.3.2'
    implementation 'jfree:jcommon:1.0.12'
    implementation 'jfree:jfreechart:1.0.13'
    implementation 'org.python:jython:2.7.2'
    implementation 'org.jooq:jooq:3.11.2'
    implementation 'org.lobobrowser:LoboBrowser:1.0.0'
    //implementation 'lobobrowser:Cobra:1.0.2@jar' //NOTE fix once lobo gets this up on a artifact repository
    implementation fileTree( dir: "${buildDir}/downloaded/", include: "*.jar" )
    // this was org.nfunk; there appears to have been a change in management
    implementation( 'org.scijava:jep:2.4.1' ) {
        exclude group: "jama", module: "jama"

    }

    compileOnly fileTree(dir: "$projectDir/cwmsDbApi")
    compileOnly fileTree(dir: "$projectDir/cwmsSystemJars")

    implementation "gov.nist.math:jama:1.0.2"
    implementation 'io.dropwizard.metrics:metrics-core:4.1.0-rc2'
    implementation 'org.passay:passay:1.3.1'
    implementation 'com.sun.mail:mailapi:1.6.2'
    implementation 'com.jcraft:jsch:0.1.55'
    implementation 'org.aspectj:aspectjrt:1.8.10'
    implementation 'org.json:json:20200518'

    implementation fileTree(dir:'cwmsDbApi/', include:'*.jar');
    implementation files("${System.getProperty('java.home')}/../lib/tools.jar")

    izpack 'org.codehaus.izpack:izpack-standalone-compiler:4.3.5'

    testRuntimeOnly 'org.junit:junit:4.8.1'
}

import org.apache.tools.ant.filters.ReplaceTokens

/*https://stackoverflow.com/questions/30038540/replace-token-in-file-before-building-but-keep-token-in-sources
(Anwser by Aaron)

This does slow down the build somewhat, but it was the cleanest
quick way I could find to replace the behavoir.
There were a log of suggestion to replace modifiing the
java with creating a properties file that gets changed.
 */
task processSource(type: Sync ){
    from sourceSets.main.java
    inputs.property 'RCNUM', RCNUM
    inputs.property 'DATE', DATE
    filter(ReplaceTokens, tokens: ['RCNUM': RCNUM, 'DATE': DATE])
    into "$buildDir/src"
}

compileJava {
    source = processSource.outputs
}

import org.apache.tools.ant.filters.*;
task stage( type: Copy ){
    dependsOn jar
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
    from('install'){
        into ""
        exclude "lrgs/**", "bin/**"
    }

    from('install'){
        into ""
        include "bin/**bat"
    }

    from('install/bin'){
        into "bin/"
        exclude ".*\\.bat"
        eachFile { details -> details.file.setExecutable(true) }
        filter( FixCrLfFilter.class, eol:FixCrLfFilter.CrLf.newInstance("lf") )
    }

    from('install/lrgs'){
        into ""
    }

    from("${buildDir}/libs/"){
        include '*.jar'
        into "bin"
        rename("opendcs.*",'opendcs.jar')
    }

    from(configurations.runtimeClasspath){
        into 'dep'
        exclude "tools.jar"
        rename("LoboBrowser-1.0.0.jar","zzzLoboBrowser-1.0.0.jar")
    }

    def resource_dir = "${projectDir}/src/main/resources"

    from(resource_dir+"/decodes/tsdb/algo"){
        include "*.xml"
        into 'imports/comp-standard'
    }

    from(resource_dir+"/decodes/cwms"){
        include "**/*.xml"
        into 'imports/comp-cwms'
    }

    from("${projectDir}/doc"){
        include "*.pdf", "algorithms.txt"
        into "doc"
    }

    // izpack?

    from("${projectDir}/schema")  {
        into 'schema'
    }
    from("${projectDir}/python") {
        into 'python'
    }

    from("${projectDir}/cwmsDbAPI"){
        into 'cwmsDbAPI'
    }

    from("izpack")
    into("${buildDir}/stage")



    doLast{
        mkdir "$buildDir/stage/lib"
        mkdir "$buildDir/stage/edit-db/config"
        mkdir "$buildDir/stage/edit-db/equipment"
        mkdir "$buildDir/stage/edit-db/netlist"
        mkdir "$buildDir/stage/edit-db/platform"
        mkdir "$buildDir/stage/edit-db/routing"
        mkdir "$buildDir/stage/edit-db/site"

    }
}




task nonfed {
    dependsOn stage
    delete "${buildDir}/stage/dep/jep-2.4.1.jar"
    delete "${buildDir}/stage/dep/jython.jar"
    delete "${buildDir}/stage/dep/NWIS.jar"

    // run izpack
}

task opentsdb(type: com.bmuschko.gradle.izpack.CreateInstallerTask) {
    dependsOn stage
    doFirst{
        delete "${buildDir}/stage/dep/NWIS.jar"


    }

        baseDir = file("$buildDir/stage")
        installFile = file("$buildDir/stage/opendcs-6-7.xml")
        outputFile = file("$buildDir/opendcs-ot-${VERSION}.jar")
        compression = 'deflate'
        compressionLevel = 9
        appProperties = ['app.group': "$group", 'app.name': 'opendcs', 'app.title': 'OpenDCS',
                        'app.version': VERSION, 'app.subpath': "OpenDCS-$VERSION"]

}


task cwmstar( type: Tar){
    dependsOn stage

    archiveFileName = "${buildDir}/opendcs-cwms-${VERSION}.tgz"
    compression = Compression.GZIP


}
