# Labels for the Algorithm Wizard GUI - Spanish Version
AlgorithmWizard.frameTitle = Asistente de Algoritmo

AlgorithmWizard.openJavaMenuLabel = Abrir Java
AlgorithmWizard.newMenuLabel = Nuevo
AlgorithmWizard.saveJavaMenuLabel = Guardar Java
AlgorithmWizard.saveJavaAsMenuLabel = Guardar Java Como
AlgorithmWizard.compileMenuLabel = Compilar
AlgorithmWizard.compileJarMenuLabel = Compilar & Jar
AlgorithmWizard.xmlMenuLabel = XML
AlgorithmWizard.saveAlgoXMLMenuLabel = Guardar Algoritmo XML
AlgorithmWizard.overlayAlgoXMLMenuLabel = Sobreescribir Algoritmo XML

AlgorithmWizard.algorithmName = Nombre Algoritmo:
AlgorithmWizard.javaClassName = Nombre Clase Java:
AlgorithmWizard.algorithmType = Tipo Algoritmo:
AlgorithmWizard.javaPackage = Paquete Java:
#Paquete -- Java Package -- Directorio
AlgorithmWizard.algorithmNameTT = Nombre de Algoritmo en la Base de Datos.
AlgorithmWizard.javaClassNameTT = Nombre de la clase en el archivo de Java.
AlgorithmWizard.javaPackageTT = El paquete de Java a la que pertenece esta clase.
AlgorithmWizard.menuOpenTT = Abrir un archivo de Algoritmo de Java para edición.
AlgorithmWizard.menuNewTT = Crear un nuevo algoritmo de archivo de Java.
AlgorithmWizard.menuSaveTT = Guardar el algoritmo de Java.
AlgorithmWizard.menuSaveAsTT = Guardar el algoritmo de Java a archivo especificado.
AlgorithmWizard.menuCompileJarTT = Abrir ventana para compilar Código y guardarlo en el JAR.
AlgorithmWizard.menuSaveXMLTT = Guardar datos del algoritmo para una posterior importación a la base de datos.
AlgorithmWizard.menuLoadXMLTT = Cargar datos y modificar los datos existentes

AlgorithmWizard.extend = Extiende:
AlgorithmWizard.implement = Implementa:
AlgorithmWizard.commentsLabel = Comentarios
AlgorithmWizard.commentsTT = Escribe comentarios en formato 'javadoc' que aparecerán en el encabezamiento de la clase  
AlgorithmWizard.inputTimeSeries = Series de tiempo de Entrada
AlgorithmWizard.outputTimeSeries = Series de tiempo de Salida
AlgorithmWizard.properties = Propiedades
AlgorithmWizard.aggreatePeriodVar = Periodo de 'Vars' agregadas:
AlgorithmWizard.codeSegments = Segmentos de Código
AlgorithmWizard.editInputTSTableErr = Seleccione Serie de tiempo de entrada, presione Editar.
AlgorithmWizard.editOutputTSTableErr = Seleccione Serie de tiempo de salida, presione Editar.
AlgorithmWizard.editPropertyTableErr = Seleccione propiedad, presione Editar.
AlgorithmWizard.deleteInputTSTableErr = Seleccione Serie de tiempo de entrada, presione Borrar.
AlgorithmWizard.deleteOutputTSTableErr = Seleccione Serie de tiempo de salida, presione Borrar.
AlgorithmWizard.deletePropertyTableErr = Seleccione propiedad, presione Borrar.
AlgorithmWizard.newOutputTSName = Nombre nuevo para Serie de tiempo de Salida:
AlgorithmWizard.outputParamNameErr = Nombre de parámetro de salida: \ 
AlgorithmWizard.outputParamExistsErr = Un parámetro de salida con ese nombre ya existe. \ 
AlgorithmWizard.inputParamExistsErr = Un parámetro de entrada con ese nombre ya existe. Todos los parámetros y propiedades tienen que tener nombres únicos. \  
AlgorithmWizard.propertyNameExistsErr = Una propiedad con ese nombre ya existe. Todos los parámetros y propiedades tienen que tener nombres únicos. \ 
AlgorithmWizard.cannotAddLabel = No se puede añadir
AlgorithmWizard.cannotChangeLabel = No se puede cambiar
AlgorithmWizard.errorSavingAlgoMsg = Error al guardar algoritmo: \ 
AlgorithmWizard.cannotFindTemplateJarErr = No se puede encontrar %s en el archivo jar. Así que no pueden leer o escribir archivos
AlgorithmWizard.problemsParsingErr = Problemas de análisis sintáctico '%s':\n
AlgorithmWizard.cannotOpenFileErr = No puede abrir '%s': \ 
AlgorithmWizard.cannotSaveToErrMsg = No puede guardar '%s': \ 
AlgorithmWizard.compAlgoRecMissingErrMsg = El archivo '%s' no contiene un algoritmo de cálculo.
AlgorithmWizard.cannotLoadFromErr = No se puede cargar de '%s': \ 
AlgorithmWizard.notBlankErr = no puede estar en blanco
AlgorithmWizard.validateNameErr = Nombre de Rol tiene que ser una sola palabra. Se debe comenzar con una letra y sólo debe contener caracteres alfanuméricos o de subrayado. 
AlgorithmWizard.imports = Importaciones
AlgorithmWizard.classVarsMethods = Vars de Clases y Métodos
AlgorithmWizard.oneTimeInit = Inicialización
AlgorithmWizard.beforeIterating = Antes de Iteración
AlgorithmWizard.timeSlice = Lazo de Tiempo
AlgorithmWizard.afterIterating = Después de Iteración

AlgorithmWizard.importsTT = Declaraciones de Importaciones para añadir en la parte superior del archivo de Java.
AlgorithmWizard.classVarsMethodsTT = Variables de Clases y Métodos
AlgorithmWizard.oneTimeInitTT = Este código es ejecutado una vez después de que el objeto de algoritmo es creado.
AlgorithmWizard.beforeIteratingTT = Este código es ejecutado antes de cada grupo de tiempo.
AlgorithmWizard.timeSliceTT = Este código es ejecutado en cada lazo de tiempo de los datos de entrada.
AlgorithmWizard.afterIteratingTT = Este código es ejecutado después de cada grupo de tiempo.

InputTimeSeriesTableModel.roleNameColumn = Nombre de Rol
InputTimeSeriesTableModel.javaTypeColumn = Tipo Java
InputTimeSeriesTableModel.parmInTypeCodeColumn = Tipo Código del valor entrada

AlgoPropTableModel.propNameColumn = Nombre Prop
AlgoPropTableModel.javaTypeColumn = Tipo Java
AlgoPropTableModel.defaultColumn = Default

InputTimeSeriesDialog.title = Series de Tiempo de Entrada
InputTimeSeriesDialog.roleName = Nombre Rol:
InputTimeSeriesDialog.javaType = Tipo Java:
InputTimeSeriesDialog.roleTypeCode = Tipo de Código:
InputTimeSeriesDialog.javaTypeComboTT = Seleccione el tipo de datos para el código de Java.
InputTimeSeriesDialog.roleTypeComboTT = Seleccione el tipo de código para el algoritmo XML.
InputTimeSeriesDialog.invalidInputNameErr = Nombre invalido para parámetro de entrada: \ 
InputTimeSeriesDialog.inputNameExistsErr = Ya existe un parámetro de entrada con este nombre '%s'. Todos los nombres de parámetros tienen que ser únicos.
InputTimeSeriesDialog.outputNameExistsErr = Ya existe un parámetro de salida con este nombre '%s'. Todos los nombres de parámetros y propiedades tienen que ser únicos.
InputTimeSeriesDialog.propertyNameExistsErr = Ya existe una propiedad con este nombre '%s'. Nombres de parámetros no debe entrar en conflicto con las propiedades.					

PropDialog.title = Propiedad de Algoritmo
PropDialog.propertyName = Nombre Propiedad:
PropDialog.javaType = Tipo Java:
PropDialog.defaultValue = Valor Default:
PropDialog.javaTypeComboTT = Seleccione el tipo de datos para el código de Java.
PropDialog.defaultValueTT = Valor Default utilizado si ninguno definido en la base de datos.
PropDialog.invalidPropertyName = Nombre de propiedad invalido: \ 
PropDialog.propNameExistsErr = Ya existe un parámetro de entrada con este nombre '%s'. Nombres de parámetros no debe entrar en conflicto con parámetros de entrada.
PropDialog.defaultValueErr = Debe proveer un valor Default que se utilizara en la ausencia de un valor definido en la base de datos.
PropDialog.defaultIntegerErr = El valor entrado '%s' no es valido para el tipo 'long integer'.
PropDialog.defaultDoubleErr = El valor entrado '%s' no es valido para el tipo de numero 'double-precision floating-point'.

CompileDialog.title = Compilar algoritmo de cálculo
CompileDialog.compilerOptions = Opciones de Compilador:
CompileDialog.classPath = Ruta de la clase:
CompileDialog.clear = Limpiar
CompileDialog.writeJavaCode = Escriba código de Java
CompileDialog.compile = Compilar
CompileDialog.addToJarFile = Añadir al archivo JAR
CompileDialog.saveClassFile = Guardar la clase
CompileDialog.done = Terminado
CompileDialog.javaCode = \ Código Java \ 
CompileDialog.compileResults = \ Resultados de Compilación
CompileDialog.saveToTempFileMsg = Guardando en archivo temporal '%s' 
CompileDialog.cannotWriteJavaFileErr = No se puede escribir en archivo: \ 
CompileDialog.cannotReadJavaFileErr = No se puede leer el archivo de Java: \ 
CompileDialog.savedJavaFileInfo = Ha guardado el archivo de Java.\n
CompileDialog.pressingCompileInfo = Puede proceder a presionar Compilar.\n
CompileDialog.cannotFindCompilerErr = \nNo encuentra el compilador en su 'classpath'. \nPor favor, encuentre 'tools.jar' bajo su instalación de 'JDK' y añádalo a la variable 'CLASSPATH' antes de ejecutar el Editor de algoritmo.
CompileDialog.cannotLoadCompilerErr = \nNo puede cargar el compilador en su classpath. \nPor favor, encuentre 'tools.jar' bajo su instalación de 'JDK' \ny añádalo a la variable 'CLASSPATH' antes de \nejecutar el Editor de algoritmo.
CompileDialog.javacFailedErr = JAVAC fallo con código de salida \ 
CompileDialog.failedToCompileErr = No se ha podido compilar: \ 
CompileDialog.compileLogLabel = Archivo de Registro de Compilar: \ 
CompileDialog.cannotReadLogFileErr = No se puede leer el archivo de registro: \ 
CompileDialog.compileSuccessfulInfo = Compilo con éxito.\n
CompileDialog.saveResultingClassInfo = Puede guardar el archivo resultante de la clase o añadirlo a un JAR.\n
CompileDialog.compileFailedErr = No su pudo Compilar. Corrija los errores anteriores y vuelva a intentarlo.
CompileDialog.cannotSaveErr = No puede guardar en '%s': \ 
CompileDialog.noJarSelectedInfo = No JAR seleccionado.
CompileDialog.jarFailedErr = JAR fracaso
CompileDialog.jarSucceededInfo = JAR logrado
CompileDialog.jarFailedExErr = JAR fracaso: \ 
CompileDialog.jarLogInfo = Registro de JAR: \ 
CompileDialog.jarSuccessfulInfo = JAR tuvo éxito.\n
