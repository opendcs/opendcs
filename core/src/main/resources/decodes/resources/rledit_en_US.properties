#Rledit labels
RefListFrame.frameTitle = DECODES Reference List Editor
RefListFrame.saveToDB = Save to DB
RefListFrame.enumerationsTab = Enumerations are used to define choices within your DECODES database. Often they are used to populate pull-down lists. They can also be used to extend functionality, such as defining a new output format.
RefListFrame.setDefault = \  Set Default  \ 

RefListFrame.moveUp = Move Up
RefListFrame.moveDown = Move Down
RefListFrame.enumeration = Enumeration: \ 
RefListFrame.engineeringTabDesc = Define the Engineering Units to be used by your DECODES application. See appendix A in the DECODES user guide for a list of standard units.
#RefListFrame.undoDelete = \   Undo Delete   \ 
RefListFrame.undoDelete = \ Undo Delete \ 
RefListFrame.euconversionsDesc = DECODES can convert data values into the correct units, as defined by your Presentation Groups. EU Conversions specify how to convert from one EU to another. DECODES can reverse linear conversions (e.g. enter \'ft\' to \'m\', and it can also do \'m\' to \'ft\'). DECODES can chain conversions (e.g. enter \'ft\' to \'m\' and \'m\' to \'cm\'. It can then do \'ft\' to \'cm\').

RefListFrame.dataTypeEquDesc = There are different standards for sensor data types, like SHEF and EPA. Here you can express that a data type from one standard is equivalent to a data type from another standard. DECODES can then automatically convert as needed by the selected output format.
RefListFrame.addEquiv = Add Equiv
RefListFrame.deleteEquiv = Delete Equiv

RefListFrame.enumTab = Enumerations
RefListFrame.EngUnitsTab = Engineering Units
RefListFrame.euConvTab = EU Conversions
RefListFrame.dataTypeEquivTab = Data Type Equiv

RefListFrame.unsavedChangesQues = You have unsaved changes. Are you sure you want to exit?
RefListFrame.confirmExit = Confirm Exit

RefListFrame.enumSelectInfo = Select Enumeration Item, then press Edit!
RefListFrame.enumDeleteInfo = Select Enumeration Item, then press Delete!
RefListFrame.enumDefaultInfo = Select Enumeration Item, then press Set Default!
RefListFrame.enumMovUpInfo = Select Enumeration Item, then press Move Up!
RefListFrame.enumMovDnInfo = Select Enumeration Item, then press Move Down!

RefListFrame.euAbbrErr = EU Abbreviation is required!
RefListFrame.euAlreadyExistErr = EU '%s' already exists. To modify it, select it in the list and press Edit.

RefListFrame.engEditInfo = Select Engineering Unit, then press Edit!
RefListFrame.cantChangeAbbr = Can't change abbreviation to '%s' because another EU already exists with that abbreviation!
RefListFrame.engDeleteInfo = Select Engineering Unit, then press Delete!

RefListFrame.unitConvEditInfo = Select Unit Converter, then press Edit!
RefListFrame.unitConvDeleteInfo = Select Unit Converter, then press Delete!

RefListFrame.selectRowEditInfo = Select row, then press Edit!
RefListFrame.selectRowDeleteInfo = Select row, then press Delete!

RefListFrame.changesWritten = Changes have been written to the database.
RefListFrame.writingErr = Error when writing %s to the database: \ 

DTEDialog.dataTypeEquiv = Data Type Equivalence
DTEDialog.dataTypesEquiv = These data types are to be considered equivalent:
DTEDialog.standardOne = Standard One:
DTEDialog.standardTwo = Standard Two:
DTEDialog.standardThree = Standard Three:
DTEDialog.standardFour = Standard Four:
DTEDialog.standardFive = Standard Five:
DTEDialog.dataTypeExistsErr = The data type %s : %s is already in another row of the table. Select that row and then press 'Edit'.
DTEDialog.assertEquvErr = To assert an equivalence, enter at least 2 data types.

EnumTableModel.DfltColumn = Dflt
EnumTableModel.nameColumn = Name
EnumTableModel.descriptionColumn = Description
EnumTableModel.javaClassColumn = Java Class (optional)

SeasonsTab.tabName = Seasons
SeasonsTab.title = Seasons for Conditional Processing
SeasonsTab.abbr = Abbreviation
SeasonsTab.name = Descriptive Name
SeasonsTab.start = Start
SeasonsTab.end = End
SeasonsTab.tz = TZ
SeasonsTab.desc = Seasons can be used to control conditional processing for platforms, sensors, and computations.
SeasonsTab.noSelection = Select season first. Then press
SeasonsTab.confirmDelete = Confirm deletion of season

SeasonDialog.title = Edit Season
SeasonDialog.abbrHelp = (Short one-word abbreviation)
SeasonDialog.nameHelp = (Longer descriptive name)
SeasonDialog.startHelp = (MM/DD-HH:MM - start of season)
SeasonDialog.endHelp = (MM/DD-HH:MM - end of season)
SeasonDialog.tzHelp = (timezone, blank = local time)
SeasonDialog.abbrRequired = Season abbreviation required!
SeasonDialog.abbrNoSpace = Season abbreviation must not have embedded spaces!

EnumValueDialog.title = Enum Item Dialog
EnumValueDialog.enumerationType = Enumeration of Type:
EnumValueDialog.enumerationTT = Short string value with no embedded spaces
EnumValueDialog.mnemonicValue = Mnemonic Value: \ 
EnumValueDialog.completeDescription = Complete Description: \ 
EnumValueDialog.executableJavaClass = Executable Java Class: \ 

EUCnvEditDialog.title = EU Conversion
EUCnvEditDialog.panelTitle = Engineering Unit Conversion
EUCnvEditDialog.convertFrom = Convert From:
EUCnvEditDialog.convertTo = Convert To:
EUCnvEditDialog.algorithm = Algorithm:
EUCnvEditDialog.equation = Equation:
EUCnvEditDialog.convertFromReqErr = The 'Convert From' field is required!
EUCnvEditDialog.convertToReqErr = The 'Convert To' field is required!
EUCnvEditDialog.convertionModErr = You cannot change this converter's from/to abbreviations to %s and %s, because there is already a converter defined with those values! To change it, press Cancel, select it from the list and press Edit.
EUCnvEditDialog.coefficient = Coefficient \ 
EUCnvEditDialog.coeffErr = \ must be blank or a number!

EUCnvTableModel.fromColumn = From
EUCnvTableModel.toColumn = To

EUDialog.frameTitle = Engineering Unit Edit
EUDialog.title = Engineering Unit Definition
EUDialog.abbreviation = Abbreviation:
EUDialog.fullName = Full Name
EUDialog.family = Family
EUDialog.measures = Measures
EUDialog.noEmbeddedSpaces = (no embedded spaces)

EUTableModel.abbrev = Abbrev

RefListFrameAboutBox.comments = Reference List Editor