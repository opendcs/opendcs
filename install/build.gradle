plugins {
    id 'java'
    id 'opendcs.java-conventions'
    id 'distribution'
}

configurations {
    opendcs
    docs
}

dependencies {
    opendcs project(":core")
    docs project(path: ":docs", configuration: 'docs')
}

task stage(type: Copy) {
    ext.outDir = layout.buildDirectory.dir("stage").get()
    from 'src/main/install'
    into "${outDir}"
    

    from 'src/main/izpack'

    from("$rootDir/schema") {
        into "schema"
    }
    from("$rootDir/python") {
        into "python"
    }

    from(configurations.opendcs) {
        into 'dep'
    }

    from(configurations.docs) {
        into 'doc'
    }

    doLast {
        project.mkdir("${outDir}/edit-db/config")
        project.mkdir("${outDir}/edit-db/routing")
        project.mkdir("${outDir}/edit-db/platform")
        project.mkdir("${outDir}/edit-db/netlist")
        project.mkdir("${outDir}/edit-db/equipment")
        project.mkdir("${outDir}/edit-db/site")
        project.mkdir("${outDir}/doc")
    }
}

distributions {
    main {
        distributionBaseName = rootProject.name
        contents {
            from stage
        }
    }
}

task runLauncher(type: Exec) {
    dependsOn stage

    if (osWin) {
        executable "cmd"
        args "/c", "launcher_start.bat", "-d3", "-l", "CON:"
    } else {
        executable 'launcher_start'
        args "-d3", "-l", "/dev/stdout"
    }
    environment "DCSTOOL_HOME": file(stage.outDir)
    environment "PATH": files(
                            file(stage.outDir.dir("bin")),
                            file(System.getenv("JAVA_HOME")+"/bin")
                            )
                        .asPath

}
