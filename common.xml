<project name="common" xmlns:ivy="antlib:org.apache.ivy.ant"
    xmlns:if="ant:if" xmlns:unless="ant:unless">
    <property name="ivy.install.version" value="2.5.0"/>
    <condition property="ivy.home" value="${env.IVY_HOME}">
        <isset property="env.IVY_HOME"/>
    </condition>
    <property name="ivy.home" value="${user.home}/.ant"/>
    <property name="ivy.jar.dir" value="${ivy.home}/lib"/>
    <property name="ivy.jar.file" value="${ivy.jar.dir}/ivy.jar"/>
    <property name="ivy.pom.url" value="https://github.com/opendcs/opendcs"/>
    <property name="ivy.pom.name" value="OpenDCS"/>
    <property name="ivy.pom.description" value="A collection of software for aggregatting and processing environmental data such as from NOAA GOES satellites."/>
    <condition property="isUnix" value="true">
        <os family="unix" />
    </condition>

    <property environment="env"/>
    <tstamp>
        <format property="snapshot.time" pattern="yyyyMMdd.hhmmss-1"/>
    </tstamp>

    <property name="project.dir" value="${basedir}"/>
    <property name="src.dir" value="src/main/java"/>
    <property name="resources.dir" value="src/main/resources"/>
    <property name="src.test.dir" value="src/test/java"/>
    <property name="resources.test.dir" value="src/test/resources"/>
    <property name="src.test-integration.dir" value="src/test-integration/java"/>
    <property name="resources.test-integration.dir" value="src/test-integration/resources"/>
    <property name="src.test-gui.dir" value="src/test-gui/java"/>
    <property name="resources.test-gui.dir" value="src/test-gui/resources"/>

    <property name="build.dir" value="build"/>
    <property name="build.classes" value="${build.dir}/classes"/>
    <property name="build.resources" value="${build.dir}/resources"/>
    <property name="build.lib" value="${build.dir}/lib"/>
    <property name="stage.dir" value="stage"/>
    <property name="build.test.classes" value="${build.dir}/test-classes"/>
    <property name="build.test.resources" value="${build.dir}/test-resources"/>
    <property name="build.test.lib" value="${build.dir}/test-libs"/>
    <property name="build.test-integration.classes" value="${build.dir}/test-integration/classes"/>
    <property name="build.test-integration.resources" value="${build.dir}/test-integration/resources"/>
    <property name="build.test-gui.classes" value="${build.dir}/test-gui/classes"/>
    <property name="build.test-gui.resources" value="${build.dir}/test-gui/resources"/>
    <property name="build.test.lib" value="${build.dir}/test-integration/libs"/>
    <property name="dist.jar" value="${build.lib}/opendcs.jar"/>
    <property name="build.release.dir" value="${build.dir}/release"/>
    <property name="spotbugs.output.dir" value="${build.dir}/reports/spotbugs"/>
    <property name="pmd.output.dir" value="${build.dir}/reports/pmd"/>
    <property name="junit.html.output.dir" value="${build.dir}/reports/junit"/>

    <!-- VERSION NUMBERS -->
    <property name="MAJ_VER" value="7"/>
    <property name="MIN_VER" value="0"/>

    <loadfile property="RCNUM" srcFile="${project.dir}/rcnum.txt">
        <filterchain><striplinebreaks/></filterchain>
    </loadfile>
    <echo message="RCNUM=${RCNUM}"/>

    <property name="version" value="${MAJ_VER}.${MIN_VER}.${RCNUM}"/>
    <echo message="VERSION=${version}"/>



    <target name="download-ivy" unless="offline">
        <echo message="IVY jar dir ${ivy.jar.dir}"/>
        <mkdir dir="${ivy.jar.dir}"/>
        <!-- download Ivy from web site so that it can be used even without any special installation -->
        <get src="https://repo1.maven.org/maven2/org/apache/ivy/ivy/${ivy.install.version}/ivy-${ivy.install.version}.jar"
                dest="${ivy.jar.file}" usetimestamp="true"/>
    </target>

    <target name="init-ivy" depends="download-ivy,-get-junitlauncher">
        <!-- try to load Ivy here from Ivy home, in case the user has not already dropped
                it into Ant's lib dir (note that the latter copy will always take precedence).
                We will not fail as long as local lib dir exists (it may be empty) and
                Ivy is in at least one of Ant's lib dir or the local lib dir. -->
        <path id="ivy.lib.path">
            <fileset dir="${ivy.jar.dir}" includes="*.jar"/>
        </path>
        <taskdef resource="org/apache/ivy/ant/antlib.xml"
                    uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path"/>
    </target>

    <target name="resolve" description="--> retreive dependencies with ivy" depends="init-ivy">
        <ivy:retrieve conf="runtime,test,test_platform"
                      sync="true"
                      pattern="build/ivy/[conf]/[artifact].[ext]"
        />
        <ivy:cachepath pathid="runtime.classpath" conf="runtime"/>
        <ivy:cachepath pathid="test.classpath" conf="test"/>
        <ivy:cachepath pathid="junit.platform.libs.classpath" conf="test_platform"/>
    </target>

    <target name="resolve.build" depends="init-ivy" description="--> retrieve build script dependencies">
        <ivy:retrieve conf="build,groovy,izpack,spotbugs,pmd"
                      sync="true"
                      pattern="build/ivy-build/[conf]/[artifact](-[classifier]).[ext]"
        />
        <ivy:cachepath pathid="izpack.classpath" conf="izpack"/>
        <ivy:cachepath pathid="groovy.classpath" conf="groovy"/>
        <ivy:cachepath pathid="build.classpath" conf="build"/>
        <ivy:cachepath pathid="spotbugs.classpath" conf="spotbugs"/>
        <ivy:cachepath pathid="pmd.classpath" conf="pmd"/>
        <taskdef resource="net/sf/antcontrib/antcontrib.properties" classpathref="build.classpath"/>
        <taskdef resource="net/sf/antcontrib/antlib.xml" classpathref="build.classpath"/>

        <taskdef resource="com/puppycrawl/tools/checkstyle/ant/checkstyle-ant-task.properties"
                 classpathref="build.classpath"/>

        <taskdef resource="edu/umd/cs/findbugs/anttask/tasks.properties"
                 classpathref="build.classpath"/>
        <taskdef name="cpd" classname="net.sourceforge.pmd.cpd.CPDTask"
                 classpathref="pmd.classpath"/>
    </target>

    <target name="report" depends="resolve,resolve.build" description="--> generates a report of dependencies">
        <mkdir dir="${build.dir}/reports/dependencies"/>
        <ivy:report todir="${build.dir}/reports/dependencies" conf="runtime,test,test_platform,izpack,groovy,build,spotbugs,pmd"/>
    </target>


    <target name="izpack.dependencies" depends="resolve">
        <taskdef name="izpack" classname="com.izforge.izpack.ant.IzPackTask" classpathref="izpack.classpath"/>
    </target>

    <macrodef name="publish">
        <sequential>
            <ivy:deliver deliverpattern="build/ivy.xml"/>
            <if>
                <isset property="DEPLOY_RELEASE"/>
                <then>
                    <property name="deploy.resolver" value="maven-releases"/>
                    <property name="deploy.version" value="${ivy.revision}"/>
                    <property name="deploy.status" value="release"/>
                    <property name="deploy.update" value="false"/>
                </then>
                <else>
                    <property name="deploy.resolver" value="maven-snapshots"/>
                    <property name="deploy.version" value="${ivy.revision}-SNAPSHOT"/>
                    <property name="deploy.status" value="integration"/>
                    <property name="deploy.update" value="true"/>
                </else>
            </if>
            <ivy:makepom ivyfile="build/ivy.xml" pomfile="build/lib/${ivy.module}.pom" conf="default,runtime"
                         templateFile="config/pom.template">
                <mapping conf="default" scope="compile"/>
                <mapping conf="runtime" scope="runtime"/>
            </ivy:makepom>
        </sequential>
    </macrodef>

    <target name="-get-junitlauncher" unless="junitlauncherPresent">
        <echo message="You're environment doesn't have the junitlauncher jar. getting it for you"/>
        <antversion property="ant_version"/>
        <get src="https://repo1.maven.org/maven2/org/apache/ant/ant-junitlauncher/${ant_version}/ant-junitlauncher-${ant_version}.jar"
            dest="${build.dir}/ant-junitlauncher.jar" usetimestamp="true"/>
        <taskdef name="junitlauncher" classname="org.apache.tools.ant.taskdefs.optional.junitlauncher.confined.JUnitLauncherTask"
            classpath="${build.dir}/ant-junitlauncher.jar"/>
    </target>


    <macrodef name="gpgsignfile">
        <attribute name="target"/>
        <attribute name="workingDir" default="${build.release.dir}"/>
        <sequential>
            <if>
                <not>
                    <isset property="gpg.key.id"/>
                </not>
                <then>
                    <fail message="Please set the GPG key for signing."/>
                </then>
            </if>
            <exec executable="gpg" dir="@{workingDir}" failonerror="true">
                <arg value="-ab"/>
                <arg value="-u"/>
                <arg value="${gpg.key.id}"/>
                <arg value="--yes"/>
                <arg value="@{target}"/>
            </exec>
        </sequential>
    </macrodef>

</project>